
#include <WiFiManager.h>                        // https://github.com/tzapu/WiFiManager
#include <Ticker.h>
#include <Arduino.h>
#include <WiFi.h>
#include <esp_system.h>


void setup() {

    Serial.begin(9600);
    Serial.println("Setup..");

    
    pinMode(LED_BUILTIN, OUTPUT);
    digitalWrite(LED_BUILTIN, LOW);

    // flash 3 times to indicate in setup
     flash_led(3); digitalWrite(LED_BUILTIN, HIGH);
    delay(5000);
    // explicitly set mode, esp defaults to STA+AP
    WiFi.mode(WIFI_STA); 
    

    //WiFiManager
    // Local intialization. Once its business is done, there is no need to keep it around
    WiFiManager wm;
    wm.setTimeout(300);
    // reset settings - for testing
    // wm.resetSettings();

    // set callback that gets called when connecting to previous WiFi fails, and enters Access Point mode
    wm.setAPCallback(configModeCallback);

    // fetches ssid and pass and tries to connect
    // if it does not connect it starts an access point with the specified name
    // here  "AirWatch-AccessPoint"
    // and goes into a blocking loop awaiting configuration
    
    if (!wm.autoConnect("AirWatch-AccessPoint")) 
    {
        Serial.println("Failed to connect and hit timeout");
        //reset and try again, or maybe put it to deep sleep
        ESP.restart();
        delay(1000);
    }

    //if you get here you have connected to the WiFi
    Serial.println("Connected to WIFI network");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
 
}

void loop() {
  // Should only get here after succesfully connecting to WIFI
    
          Serial.println("Done with WIFI ...");
         // flash led forever if connected to wifi
          digitalWrite(LED_BUILTIN, HIGH);
          delay(100);
          digitalWrite(LED_BUILTIN, LOW);
          delay(100);
    
}

//gets called when WiFiManager enters configuration mode
void configModeCallback (WiFiManager *myWiFiManager) 
{
           Serial.println("Entered WIFI setup mode");
           flash_led(10);  digitalWrite(LED_BUILTIN, HIGH);
           Serial.println(WiFi.softAPIP());
           //if you used auto generated SSID, print it
           Serial.println(myWiFiManager->getConfigPortalSSID());
           //entered config mode.. This is blocking anything else from running. 
          
}


void flash_led(int numFlashes)
{
  for (int i = 0; i < numFlashes; i++) 
  {
    digitalWrite(LED_BUILTIN, HIGH);
    delay(200);
    digitalWrite(LED_BUILTIN, LOW);
    delay(200);
    
  }  
}
